#!/usr/bin/env ruby
require 'optparse'
require 'cfndsl-pipeline'

USAGE = "Usage: #{File.basename(__FILE__)} input file [ -o output dir ] [ -b bucket | -p | -c ] [ include1 include2 etc.. ]"
cli_options = {
  :output => './'
}

pipe_options = CfnDslPipeline::Options.new

op = OptionParser.new do |opts|
  opts.banner = USAGE
  # opts.on('-t', '--template file', 'Input file in CFNDSL format') do |file|
  #   cli_options[:template] = file
  # end

  opts.on('-o', '--output dir', 'Optional output directory. Default is current directory') do |dir|
    cli_options[:output] = dir
  end

  opts.on('-b', '--bucket', 'Existing S3 bucket for cost estimation and large template syntax validation') do |bucket|
    pipe_options.validation_bucket = bucket
  end

  opts.on('--disable-syntax', 'Enable syntax check') do
    pipe_options.validate_syntax = false
  end

  opts.on('-p', '--params', 'Create cloudformation deploy compatible params file') do
    pipe_options.dump_deploy_params = true
  end

  opts.on('--disable-nag', 'Enable cfn_nag') do
    pipe_options.validate_cfn_nag = false
  end

  opts.on('-r', '--nag-rule-dir', 'cfn_nag custom rules directory') do
    pipe_options.cfn_nag[:rule_directory] = true
  end  

  opts.on('--syntax-report', 'Save template syntax report') do
    pipe_options.save_syntax_report = true
  end


  opts.on('--audit-report', 'Save cfn_nag audit report') do
    pipe_options.save_audit_report = true
  end  

  opts.on('-c', '--estimate', 'Generate URL for AWS simple cost calculator') do
    pipe_options.validate_cfn_nag = true
  end

  opts.on_tail('-h', '--help', 'show this message') do
    puts opts
    exit
  end

  opts.on_tail('-v', '--version', 'show the version') do
    puts CfnDsl::Pipeline::VERSION
    exit
  end
end

op.parse!

cli_options[:template] = ARGV.pop

# Exit on invalid option combinations 
unless cli_options[:template] && File.file?(cli_options[:template])
  puts "Error: Input template file does not exist."
  puts op
  exit 1
end

if pipe_options.save_syntax_report
  unless pipe_options.validate_syntax
    puts "Error: save syntax report is set, but syntax validation is not enabled."
    puts op
    exit 1
  end  
end

if pipe_options.cfn_nag.rule_directory
  unless pipe_options.validate_cfn_nag
    puts "Error: cfn_nag rule directory set, but cfn_nag is not enabled"
    puts op
    exit 1
  end  
  unless File.directory?(pipe_options.cfn_nag.rule_directory)
    puts "Error: cfn_nag rule directory does not exist"
    puts op
    exit 1
  end  
end

cfndsl_extras = []
ARGV.each do |arg|
  cfndsl_extras << [:yaml, arg]
end if ARGV.length > 0

pipeline = CfnDslPipeline::Pipeline.new(cli_options[:output], pipe_options)
pipeline.build(cli_options[:template], cfndsl_extras)

